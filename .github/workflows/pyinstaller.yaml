name: Vacations Bot as executable

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]  # Esto activará el flujo de trabajo cuando se cree un nuevo release

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          python app/setup.py

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}  # Crea una etiqueta basada en el número de ejecución
          release_name: Release v${{ github.run_number }}
          body: 'Release automático del ejecutable de Vacations Bot.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executable to Release
        uses: softprops/action-gh-release@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/babybot-nancy.exe  # Asegúrate de que esta es la ruta correcta al ejecutable generado
          asset_name: babybot-nancy.exe  # Nombre del archivo en el release
          asset_content_type: application/octet-stream  # Tipo de contenido del archivo